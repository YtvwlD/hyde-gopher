from bs4 import BeautifulSoup
from flask import Flask, url_for
from flask_gopher import GopherExtension, GopherRequestHandler
from jinja2 import ChoiceLoader, Environment, FileSystemLoader, FunctionLoader
from hyde.model import Config
from hyde.site import Site
from os import environ
from . import _version

app = Flask(__name__)
gopher = GopherExtension(app)


@app.route('/')
def index():
    entries = [
        gopher.menu.dir(entry.name, entry.url)
        for entry in site.config.context.data.menu
    ]
    entries.insert(0, gopher.menu.title('Homepage'))
    entries.append(gopher.menu.info(f"Generated by hyde-gopher {_version}."))
    return gopher.render_menu(*entries)


@app.route('/<file>.html')
def post(file):
    template = environment.get_template(file + ".html")
    html = template.render()  # TODO: site=?
    soup = BeautifulSoup(html)
    entries = list()
    for line in soup.text.splitlines():
        while len(line) >= 70:
            entries.append(line[:70])
            line = line[70:]
        else:
            entries.append(line)
    return gopher.render_menu(*entries)


def load_hyde_config(sitepath):
    config = Config(sitepath, config_file="site.yaml")
    return Site(sitepath, config)


def run():
    global site, environment
    site = load_hyde_config(environ["SITE_PATH"])
    environment = Environment(loader=ChoiceLoader([
            FileSystemLoader(str(site.content)),
            # don't fail if a template does not exist
            FunctionLoader(lambda name: ("", "/dev/null", True)),
    ]))
    app.run('::', 7070, request_handler=GopherRequestHandler)
